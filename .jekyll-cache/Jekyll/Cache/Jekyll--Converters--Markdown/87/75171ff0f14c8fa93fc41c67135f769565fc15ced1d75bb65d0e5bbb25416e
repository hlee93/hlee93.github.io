I"ç*<p>(Information and Materials for the Nand2Tetris projects comes from The Elements of Computing Systems by Naom Nisan and Shimon Schocken unless otherwise stated.)</p>

<p>The chapter focusses on boolean algebra and its uses in the design and creation of hardware architecture. A boolean function takes binary inputs (e.g. 1 and 0 or yes and No) and outputs a binary value. Every boolean expression can be described using <strong>AND</strong>, <strong>OR</strong> and <strong>NOT</strong> values.</p>

<blockquote>
  <p>Letâ€™s take $x$ and $y$ as our binary variablesâ€¦</p>

  <p>The following notations can be used to express AND, OR, NOT respectively</p>

  <p>$xy$ or $x.y$</p>

  <p>$x+y$</p>

  <p>$\overline{x}$   (The bar denotes NOT)</p>
</blockquote>

<p>To calculate the number of boolean expressions that can be created from $n$ binary inputs, $2^{2n}$ can be used. Using our example of $x$ and $y$ inputs, this would mean there are 16 boolean expressions which can be created.</p>

<p>Example of a truth table for $f(x,y,z)$ (and bonus python code!)</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="k">def</span> <span class="nf">highlighter</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="n">color</span> <span class="o">=</span> <span class="s">'yellow'</span><span class="p">):</span>
    <span class="s">'''
    highlight the true/1 outputs in a truth table yellow.
    '''</span>
    <span class="n">is_one</span> <span class="o">=</span> <span class="n">data</span> <span class="o">==</span> <span class="mi">1</span>
    <span class="k">return</span> <span class="p">[</span><span class="s">'background-color: '</span> <span class="o">+</span> <span class="n">color</span> <span class="k">if</span> <span class="n">v</span> <span class="k">else</span> <span class="s">''</span> <span class="k">for</span> <span class="n">v</span> <span class="ow">in</span> <span class="n">is_one</span><span class="p">]</span>

<span class="n">truthTable</span> <span class="o">=</span> <span class="p">[{</span><span class="s">'x'</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="s">'y'</span><span class="p">:</span> <span class="mi">0</span> <span class="p">,</span> <span class="s">'z'</span><span class="p">:</span><span class="mi">0</span><span class="p">,</span> <span class="s">'f(x,y,z)'</span><span class="p">:</span> <span class="mi">0</span><span class="p">},</span>
              <span class="p">{</span><span class="s">'x'</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="s">'y'</span><span class="p">:</span> <span class="mi">0</span> <span class="p">,</span> <span class="s">'z'</span><span class="p">:</span><span class="mi">1</span><span class="p">,</span> <span class="s">'f(x,y,z)'</span><span class="p">:</span> <span class="mi">0</span><span class="p">},</span>
              <span class="p">{</span><span class="s">'x'</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="s">'y'</span><span class="p">:</span> <span class="mi">1</span> <span class="p">,</span> <span class="s">'z'</span><span class="p">:</span><span class="mi">0</span><span class="p">,</span> <span class="s">'f(x,y,z)'</span><span class="p">:</span> <span class="mi">1</span><span class="p">},</span>
              <span class="p">{</span><span class="s">'x'</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="s">'y'</span><span class="p">:</span> <span class="mi">1</span> <span class="p">,</span> <span class="s">'z'</span><span class="p">:</span><span class="mi">1</span><span class="p">,</span> <span class="s">'f(x,y,z)'</span><span class="p">:</span> <span class="mi">0</span><span class="p">},</span>
              <span class="p">{</span><span class="s">'x'</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s">'y'</span><span class="p">:</span> <span class="mi">0</span> <span class="p">,</span> <span class="s">'z'</span><span class="p">:</span><span class="mi">0</span><span class="p">,</span> <span class="s">'f(x,y,z)'</span><span class="p">:</span> <span class="mi">1</span><span class="p">},</span>
              <span class="p">{</span><span class="s">'x'</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s">'y'</span><span class="p">:</span> <span class="mi">0</span> <span class="p">,</span> <span class="s">'z'</span><span class="p">:</span><span class="mi">1</span><span class="p">,</span> <span class="s">'f(x,y,z)'</span><span class="p">:</span> <span class="mi">0</span><span class="p">},</span>
              <span class="p">{</span><span class="s">'x'</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s">'y'</span><span class="p">:</span> <span class="mi">1</span> <span class="p">,</span> <span class="s">'z'</span><span class="p">:</span><span class="mi">0</span><span class="p">,</span> <span class="s">'f(x,y,z)'</span><span class="p">:</span> <span class="mi">1</span><span class="p">},</span>
              <span class="p">{</span><span class="s">'x'</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s">'y'</span><span class="p">:</span> <span class="mi">1</span> <span class="p">,</span> <span class="s">'z'</span><span class="p">:</span><span class="mi">1</span><span class="p">,</span> <span class="s">'f(x,y,z)'</span><span class="p">:</span> <span class="mi">0</span><span class="p">},]</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">truthTable</span><span class="p">,</span> <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">'x'</span><span class="p">,</span><span class="s">'y'</span><span class="p">,</span><span class="s">'z'</span><span class="p">,</span><span class="s">'f(x,y,z)'</span><span class="p">])</span>
<span class="c1">#df = df.style.hide_index()
</span><span class="n">df</span> <span class="o">=</span> <span class="n">df</span><span class="p">.</span><span class="n">style</span><span class="p">.</span><span class="nb">apply</span><span class="p">(</span><span class="n">highlighter</span><span class="p">,</span> <span class="n">subset</span><span class="o">=</span><span class="p">[</span><span class="s">'f(x,y,z)'</span><span class="p">]).</span><span class="n">hide_index</span><span class="p">()</span>

<span class="n">df</span>
</code></pre></div></div>

<style type="text/css">
    #T_ccd243a6_9d31_11ea_b7d3_509a4ccea00crow2_col3 {
            background-color:  yellow;
        }    #T_ccd243a6_9d31_11ea_b7d3_509a4ccea00crow4_col3 {
            background-color:  yellow;
        }    #T_ccd243a6_9d31_11ea_b7d3_509a4ccea00crow6_col3 {
            background-color:  yellow;
        }</style>

<table id="T_ccd243a6_9d31_11ea_b7d3_509a4ccea00c">
<thead>    <tr>
        <th class="col_heading level0 col0">x</th>
        <th class="col_heading level0 col1">y</th>
        <th class="col_heading level0 col2">z</th>
        <th class="col_heading level0 col3">f(x,y,z)</th>
    </tr></thead>
<tbody>    <tr>
        <td id="T_ccd243a6_9d31_11ea_b7d3_509a4ccea00crow0_col0" class="data row0 col0">0</td>
        <td id="T_ccd243a6_9d31_11ea_b7d3_509a4ccea00crow0_col1" class="data row0 col1">0</td>
        <td id="T_ccd243a6_9d31_11ea_b7d3_509a4ccea00crow0_col2" class="data row0 col2">0</td>
        <td id="T_ccd243a6_9d31_11ea_b7d3_509a4ccea00crow0_col3" class="data row0 col3">0</td>
    </tr>    <tr>
        <td id="T_ccd243a6_9d31_11ea_b7d3_509a4ccea00crow1_col0" class="data row1 col0">0</td>
        <td id="T_ccd243a6_9d31_11ea_b7d3_509a4ccea00crow1_col1" class="data row1 col1">0</td>
        <td id="T_ccd243a6_9d31_11ea_b7d3_509a4ccea00crow1_col2" class="data row1 col2">1</td>
        <td id="T_ccd243a6_9d31_11ea_b7d3_509a4ccea00crow1_col3" class="data row1 col3">0</td>
    </tr>    <tr>
        <td id="T_ccd243a6_9d31_11ea_b7d3_509a4ccea00crow2_col0" class="data row2 col0">0</td>
        <td id="T_ccd243a6_9d31_11ea_b7d3_509a4ccea00crow2_col1" class="data row2 col1">1</td>
        <td id="T_ccd243a6_9d31_11ea_b7d3_509a4ccea00crow2_col2" class="data row2 col2">0</td>
        <td id="T_ccd243a6_9d31_11ea_b7d3_509a4ccea00crow2_col3" class="data row2 col3">1</td>
    </tr>    <tr>
        <td id="T_ccd243a6_9d31_11ea_b7d3_509a4ccea00crow3_col0" class="data row3 col0">0</td>
        <td id="T_ccd243a6_9d31_11ea_b7d3_509a4ccea00crow3_col1" class="data row3 col1">1</td>
        <td id="T_ccd243a6_9d31_11ea_b7d3_509a4ccea00crow3_col2" class="data row3 col2">1</td>
        <td id="T_ccd243a6_9d31_11ea_b7d3_509a4ccea00crow3_col3" class="data row3 col3">0</td>
    </tr>    <tr>
        <td id="T_ccd243a6_9d31_11ea_b7d3_509a4ccea00crow4_col0" class="data row4 col0">1</td>
        <td id="T_ccd243a6_9d31_11ea_b7d3_509a4ccea00crow4_col1" class="data row4 col1">0</td>
        <td id="T_ccd243a6_9d31_11ea_b7d3_509a4ccea00crow4_col2" class="data row4 col2">0</td>
        <td id="T_ccd243a6_9d31_11ea_b7d3_509a4ccea00crow4_col3" class="data row4 col3">1</td>
    </tr>    <tr>
        <td id="T_ccd243a6_9d31_11ea_b7d3_509a4ccea00crow5_col0" class="data row5 col0">1</td>
        <td id="T_ccd243a6_9d31_11ea_b7d3_509a4ccea00crow5_col1" class="data row5 col1">0</td>
        <td id="T_ccd243a6_9d31_11ea_b7d3_509a4ccea00crow5_col2" class="data row5 col2">1</td>
        <td id="T_ccd243a6_9d31_11ea_b7d3_509a4ccea00crow5_col3" class="data row5 col3">0</td>
    </tr>    <tr>
        <td id="T_ccd243a6_9d31_11ea_b7d3_509a4ccea00crow6_col0" class="data row6 col0">1</td>
        <td id="T_ccd243a6_9d31_11ea_b7d3_509a4ccea00crow6_col1" class="data row6 col1">1</td>
        <td id="T_ccd243a6_9d31_11ea_b7d3_509a4ccea00crow6_col2" class="data row6 col2">0</td>
        <td id="T_ccd243a6_9d31_11ea_b7d3_509a4ccea00crow6_col3" class="data row6 col3">1</td>
    </tr>    <tr>
        <td id="T_ccd243a6_9d31_11ea_b7d3_509a4ccea00crow7_col0" class="data row7 col0">1</td>
        <td id="T_ccd243a6_9d31_11ea_b7d3_509a4ccea00crow7_col1" class="data row7 col1">1</td>
        <td id="T_ccd243a6_9d31_11ea_b7d3_509a4ccea00crow7_col2" class="data row7 col2">1</td>
        <td id="T_ccd243a6_9d31_11ea_b7d3_509a4ccea00crow7_col3" class="data row7 col3">0</td>
    </tr></tbody>
</table>

<p>Using the expressions which equal to 1, we can start to create the canonical representation of our truth table.</p>

<p><strong>OR</strong> $y$
<strong>OR</strong> $x$
<strong>NOT</strong> $z$</p>

<p>Thus the canonical representation is $(x + y).z$</p>
:ET